{{- if .Values.redisConf.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "akeyless-secure-remote-access.fullname" . }}-cache
  namespace: {{ .Release.Namespace | quote }}
  labels:
    name: {{ template "akeyless-secure-remote-access.fullname" . }}-cache
    component: cache
spec:
  replicas: 1
  selector:
    matchLabels:
      name: {{ template "akeyless-secure-remote-access.fullname" . }}-cache
  template:
    metadata:
      labels:
        name: {{ template "akeyless-secure-remote-access.fullname" . }}-cache
        component: cache
    spec:
      containers:
        - name: {{ template "akeyless-secure-remote-access.fullname" . }}-cache
          image: "{{ .Values.cache.image.repository }}:{{ .Values.cache.image.tag }}"
          imagePullPolicy: {{ .Values.cache.image.pullPolicy }}
          ports:
            - containerPort: 6379
              name: cache
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - |
                  #!/usr/bin/env bash -e
                  export REDISCLI_AUTH="$REDIS_PASSWORD"
                  set_response=$(
                    redis-cli set liveness_test_key "SUCCESS"
                  )
                  response=$(
                    redis-cli get liveness_test_key
                  )
                  del_response=$(
                      redis-cli del liveness_test_key
                  )
                  if [ "$response" != "SUCCESS" ] ; then
                    echo "Unable to get keys, something is wrong"
                    echo "$response"
                    exit 1
                  fi
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - |
                  #!/usr/bin/env bash -e
                  export REDISCLI_AUTH="$REDIS_PASSWORD"
                  response=$(
                      redis-cli ping
                  )
                  if [ "$response" != "PONG" ] ; then
                      echo "Unable to get keys, something is wrong"
                      echo "$response"
                      exit 1
                    fi
            initialDelaySeconds: 5
            periodSeconds: 5
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "akeyless-zero-trust-portal.cacheSecretName" . }}
                  key: cache-pass
---

apiVersion: v1
kind: Service
metadata:
  name: {{ template "akeyless-secure-remote-access.fullname" . }}-cache-svc
  labels:
{{- include "akeyless-secure-remote-access.labels" . | nindent 4 }}
spec:
  ports:
    - port: 6379
      protocol: TCP
  selector:
    name: {{ template "akeyless-secure-remote-access.fullname" . }}-cache
  type: ClusterIP
  {{- end }}