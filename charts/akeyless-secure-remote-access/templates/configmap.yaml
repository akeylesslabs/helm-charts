{{- if eq .Values.sshConfig.enabled true }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $.Release.Name }}-cm-creds
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ $.Values.sshConfig.containerName }}
    chart: {{ $.Chart.Name }}
data:
  ca.pub: |
{{ required "A valid .Values.sshConfig.config.CAPublicKey entry required!" .Values.sshConfig.config.CAPublicKey | indent 4 }}

{{- if .Values.sshConfig.config.sessionTermination.enabled }}
  api-url: |
{{ .Values.sshConfig.config.sessionTermination.apiURL | indent 4  }}
  api-token: |
{{ .Values.sshConfig.config.sessionTermination.apiToken | indent 4  }}
{{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $.Release.Name }}-cm-conf
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ $.Values.sshConfig.containerName }}
    chart: {{ $.Chart.Name }}
data:
  {{- with .Values.sshConfig.config.logForwarding}}
  {{- if .enabled }}
  {{- if not .existingSecretName }}
  logand.conf: |
  {{- required "A valid .Values.sshConfig.config.logForwarding.settings entry required!" .settings | nindent 4 }}
  {{- end }}
  {{- end }}
  {{- end }}
  {{- if (eq (include "secret-exist" (dict "Root" $.Values.privilegedAccess.existingSecretNames "Name" "access")) "false") }}
  akeyless_config_file: |
    {{ required "API Gateway URL is required" .Values.apiGatewayURL }}
    {{- with .Values.privilegedAccess}}
    cmd=auth&access-id={{ required "Privileged access credentials are required" .accessID }}&access-key={{ .accessKey }}
    {{- end }}
    {{- end }}
{{- end }}