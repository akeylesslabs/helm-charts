{{- if eq .Values.sshConfig.enabled true }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ssh-{{ include "akeyless-secure-remote-access.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "akeyless-secure-remote-access.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "akeyless-secure-remote-access.fullname" . }}
  replicas: 1
  updateStrategy:
    type: {{ .Values.sshConfig.updateStrategy }}
  selector:
    matchLabels:
      app: ssh-bastion
  template:
    metadata:
      labels:
        app: ssh-bastion
    spec:
      {{ - with .Values.sshConfig.service_account }}
      {{ - if .enabled }}
      serviceAccountName: {{ .serviceAccountName }}
      {{ - if .nodeSelector }}
      nodeSelector:
      {{ toYaml .nodeSelector | indent 2 }}
      {{ - end }}
      {{ - end }}
      {{ - end }}
      volumes:
      - name: config
        emptyDir: {}
      - name: creds
        emptyDir: {}
      - name: ssh
      {{- range .Values.sshConfig.persistence.volumes }}
      - name: {{ .name | title | lower }}
        persistentVolumeClaim:
          claimName: {{ printf "%s-%s" $.Release.Name .name | title | lower }}
      {{- end }}
      - name: configmap-creds
        configMap:
          name: {{ $.Release.Name }}-cm-creds
      - name: configmap-conf
        configMap:
          name: {{ $.Release.Name }}-cm-conf
      initContainers:
        # Since k8s 1.9.4, config maps mount read-only volumes. Since the Docker image also writes to the config file,
        # the file must be mounted as read-write. We use init containers to copy from the config map read-only
        # path, to a read-write path
        - name: bootstrap
          image: busybox:1.30.1
          imagePullPolicy: IfNotPresent
          command: ['sh']
          args:
            - "-c"
            - |
              set -ex
              [ "$(ls /configmap_conf)" ] && cp /configmap_conf/* /var/akeyless/conf
              [ "$(ls /configmap_creds)" ] && cp /configmap_creds/* /var/akeyless/creds
          volumeMounts:
            - name: configmap-conf
              mountPath: /configmap_conf
            - name: configmap-creds
              mountPath: /configmap_creds
            - name: config
              mountPath: /var/akeyless/conf
            - name: creds
              mountPath: /var/akeyless/creds
      imagePullSecrets:
        - name: akeyless-docker-hub
      containers:
        - name: {{ .Values.sshConfig.containerName }}
          image: "{{ .Values.sshConfig.image.repository }}:{{ .Values.sshConfig.image.tag | default .Chart.Annotations.sshVersion }}"
          imagePullPolicy: {{ .Values.sshConfig.image.pullPolicy }}
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
          ports:
          - containerPort: 22
            name: ssh
          - containerPort: 9900
            name: curl-proxy
          env:
          - name: VERSION
            value: {{ .Chart.Annotations.sshVersion }}
{{- if .Values.clusterName }}
          - name: CLUSTER_NAME
            value: {{ .Values.clusterName }}
{{- end }}
{{- if .Values.privilegedAccess.allowedAccessIDs }}
          - name: ALLOWED_ACCESS_IDS
            value: {{ range $index, $element := .Values.privilegedAccess.allowedAccessIDs -}}{{- if $index -}},{{- end -}}{{ $element }}{{ end }}
{{- end }}
{{- if .Values.httpProxySettings.http_proxy }}
          - name: http_proxy
            value: {{ .Values.httpProxySettings.http_proxy }}
{{- end }}
{{- if .Values.httpProxySettings.https_proxy }}
          - name: https_proxy
            value: {{ .Values.httpProxySettings.https_proxy }}
{{- end }}
{{- if .Values.httpProxySettings.no_proxy }}
          - name: no_proxy
            value: {{ .Values.httpProxySettings.no_proxy }}
{{- end }}
          livenessProbe:
            exec:
              command:
              - sh
              - /usr/local/bin/health.sh
{{- toYaml .Values.sshConfig.livenessProbe | trim | nindent 12 }}
          readinessProbe:
            exec:
              command:
              - sh
              - /usr/local/bin/health.sh
{{- toYaml .Values.sshConfig.readinessProbe | trim | nindent 12 }}
          volumeMounts:
          {{- range .Values.sshConfig.persistence.volumes }}
            - name: {{ .name | title | lower }}
              mountPath: /var/run/requests 
            - name: {{ .name | title | lower }}
              mountPath: /var/run/akeyless/ssh
          {{- end }}
            - name: config
              mountPath: /var/akeyless/conf
            - name: creds
              mountPath: /var/akeyless/creds
          resources:
{{- toYaml .Values.sshConfig.resources | nindent 12 }}
{{- end }}
