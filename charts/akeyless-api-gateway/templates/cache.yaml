{{- if or (not (eq (include "akeyless-api-gw.adminAccessUidExist" .) "")) ( .Values.cachingConf.clusterCache.enabled) }}
{{- $deploymentName := printf "%s-cache" (include "akeyless-api-gw.fullname" .) }}
{{- $mountCertPaths := "/opt/akeyless/cache/certs" -}}
{{- $tlsCertKeyPath := printf "%s/tls.key" $mountCertPaths }}
{{- $tlsCACertPath := printf "%s/ca.crt" $mountCertPaths }}
{{- $tlsCertPath := printf "%s/tls.crt" $mountCertPaths }}
{{- $tlsArgs :=  ternary (printf "--tls --cacert %s --cert %s --key %s " $tlsCACertPath $tlsCertPath $tlsCertKeyPath) "" (include "cacheEnableTls" . | eq "true") -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $deploymentName }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    name: {{ $deploymentName }}
    component: cache
{{- include "akeyless-api-gw.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      name: {{ $deploymentName }}
  template:
    metadata:
      labels:
        name: {{ $deploymentName }}
        component: cache
    spec:
      {{- if (include "cacheEnableTls" . | eq "true") }}
      volumes:
        - name: cache-tls
          secret:
            secretName: {{ include "cacheTlsSecretName" . }}
      {{ end }}
      {{-  include "cache.imagePullSecrets" . | indent 2 }}
      containers:
      - name: {{ $deploymentName }}
        image: "{{ .Values.cache.image.repository }}:{{ .Values.cache.image.tag }}"
        imagePullPolicy: {{ .Values.cache.image.pullPolicy }}
        args:
        - redis-server
        - --requirepass
        - $(REDIS_PASSWORD)
        - --rename-command
        - FLUSHDB
        - ""
        - --rename-command
        - FLUSHALL
        - ""
        - --maxmemory
        - {{ include "akeyless-api-gw.redisMaxmemory" . | quote }}
        - --maxmemory-policy
        - allkeys-lru
        {{- if (include "cacheEnableTls" . | eq "true") }}
        - --port
        - "0"
        - --tls-port
        - "6379"
        - --tls-auth-clients
        - "yes"
        - --tls-cert-file
        - {{ $tlsCertPath }}
        - --tls-key-file
        - {{ $tlsCertKeyPath }}
        - --tls-ca-cert-file
        - {{ $tlsCACertPath }}
        {{- else }}
        - --port
        - "6379"
        {{- end }}
        ports:
        - containerPort: 6379
          name: cache
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - |
                #!/usr/bin/env bash -e
                set_response=$(
                  redis-cli {{ $tlsArgs }} -a "$REDIS_PASSWORD" set liveness_test_key "SUCCESS"
                )
                response=$(
                  redis-cli {{ $tlsArgs }} -a "$REDIS_PASSWORD" get liveness_test_key
                )
                del_response=$(
                  redis-cli {{ $tlsArgs }} -a "$REDIS_PASSWORD" del liveness_test_key
                )
                if [ "$response" != "SUCCESS" ] ; then
                  echo "Unable to get keys, something is wrong"
                  echo "$response"
                  exit 1
                fi
          initialDelaySeconds: 5
          periodSeconds: 5
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - |
                #!/usr/bin/env bash -e
                response=$(
                  redis-cli {{ $tlsArgs }} -a "$REDIS_PASSWORD" ping
                )
                if [ "$response" != "PONG" ] ; then
                    echo "Unable to get keys, something is wrong"
                    echo "$response"
                    exit 1
                fi
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          {{- toYaml .Values.cache.resources | nindent 12 }}
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "akeyless-api-gw.cacheSecretName" . }}
              key: cache-pass
        {{- if (include "cacheEnableTls" . | eq "true") }}
        volumeMounts:
        - name: cache-tls
          mountPath: {{ $mountCertPaths }}
          readOnly: true
        {{- end }}
---

apiVersion: v1
kind: Service
metadata:
  name: {{ include "cacheSvcName" . }}
  labels:
{{- include "akeyless-api-gw.labels" . | nindent 4 }}
spec:
  ports:
  - port: 6379
    protocol: TCP
  selector:
    name: {{ $deploymentName }}
  type: ClusterIP
{{- end }}
