apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "akeyless-api-gw.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "akeyless-api-gw.labels" . | nindent 4 }}
  annotations:
  {{- toYaml .Values.deployment.annotations | nindent 4 }}
spec:
  {{- if not .Values.HPA.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "akeyless-api-gw.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "akeyless-api-gw.selectorLabels" . | nindent 8 }}
    spec:
      {{- if eq (include "akeyless-api-gw.customerFragmentExist" .) "true" }}
      volumes:
      - name: akeyless-config
        emptyDir: {}
      - name: customer-fragments-secret
        secret:
          secretName: {{ include "akeyless-api-gw.secretName" . }}
          items:
            - key: customer-fragments
              path: customer_fragments.json

      initContainers:
        # Since k8s 1.9.4, config maps mount read-only volumes. Since the Docker image also writes to the config file,
        # the file must be mounted as read-write. We use init containers to copy from the config map read-only
        # path, to a read-write path
        - name: bootstrap
          image: busybox:1.30.1
          imagePullPolicy: IfNotPresent
          command: ['sh']
          args:
            - "-c"
            - |
              set -ex
              [ "$(ls /customer_fragments)" ] && cp /customer_fragments/* /root/.akeyless
          volumeMounts:
            - name: customer-fragments-secret
              mountPath: /customer_fragments
            - name: akeyless-config
              mountPath: /root/.akeyless
      {{- end }}
      containers:
        - name: {{ .Values.containerName }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: web
              containerPort: 18888
            - name: configure-app
              containerPort: 8000
            - name: legacy-api
              containerPort: 8080
            - name: api
              containerPort: 8081
            - name: hvp
              containerPort: 8200
            - name: kmip
              containerPort: 5696
          livenessProbe:
            httpGet:
              path: /
              port: 8080
{{- toYaml .Values.livenessProbe | trim | nindent 12 }}
          readinessProbe:
            httpGet:
              path: /
              port: 8080
{{- toYaml .Values.readinessProbe | trim | nindent 12 }}
          {{- if eq (include "akeyless-api-gw.customerFragmentExist" .) "true" }}
          volumeMounts:
            - name: akeyless-config
              mountPath: /root/.akeyless
          {{- end }}
          resources:
{{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- if eq (include "akeyless-api-gw.adminAccessIdExist" .) "true" }}
            - name: ADMIN_ACCESS_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "akeyless-api-gw.secretName" . }}
                  key: admin-access-id
          {{- end }}
          {{- if eq (include "akeyless-api-gw.adminAccessUidExist" .) "true" }}
            - name: ADMIN_UID_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "akeyless-api-gw.secretName" . }}
                  key: admin-uid-init-token
          {{- end }}
          {{- if eq (include "akeyless-api-gw.allowedAccessIDsExist" .) "true" }}
            - name: ALLOWED_ACCESS_IDS
              valueFrom:
                secretKeyRef:
                  name: {{ include "akeyless-api-gw.secretName" . }}
                  key: allowed-access-ids
          {{- end }}
          {{- if eq (include "akeyless-api-gw.adminAccessKeyExist" .) "true" }}
            - name: ADMIN_ACCESS_KEY 
              valueFrom:
                secretKeyRef:
                  name: {{ include "akeyless-api-gw.secretName" . }}
                  key: admin-access-key
          {{- end }}
          {{- if eq (include "akeyless-api-gw.adminPasswordExist" .) "true" }}
            - name: ADMIN_PASSWORD 
              valueFrom:
                secretKeyRef:
                  name: {{ include "akeyless-api-gw.secretName" . }}
                  key: admin-password
          {{- end }}
          {{- if .Values.akeylessUserAuth.clusterName }}
            - name: CLUSTER_NAME
              value: {{ .Values.akeylessUserAuth.clusterName }}
          {{- end }}
          {{- if .Values.akeylessUserAuth.initialClusterDisplayName }}
            - name: INITIAL_DISPLAY_NAME
              value: {{ .Values.akeylessUserAuth.initialClusterDisplayName }}
          {{- end }}
          {{- if .Values.akeylessUserAuth.configProtectionKeyName }}
            - name: CONFIG_PROTECTION_KEY_NAME
              value: {{ .Values.akeylessUserAuth.configProtectionKeyName }}
          {{- end }}
          {{- if eq (include "akeyless-api-gw.adminAccessUidExist" .) "true"  }}
            - name:  GATEWAY_CLUSTER_CACHE
              value: enable
            - name: REDIS_ADDR
              value: {{  include "akeyless-api-gw.fullname" . }}-redis-svc:6379
            - name: REDIS_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ include "akeyless-api-gw.redisSecretName" . }}
                  key: redis-pass
          {{- end }}
          {{- if .Values.universalIdentity.uidRotationInterval }}
            - name: UID_ROTATE_INTERVAL
              value: {{ .Values.universalIdentity.uidRotationInterval }}
          {{- end }}
          {{- if .Values.universalIdentity.uidCreateChildTokenPerPod }}
            - name: UID_CREATE_CHILD_TOKEN_PER_POD
              value: {{ .Values.universalIdentity.uidCreateChildTokenPerPod }}
          {{- end }}   
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name         
            - name: VERSION
              value: {{ .Values.version | default .Chart.AppVersion }}
          {{- if .Values.env }}
  {{- toYaml .Values.env | nindent 12 }}
          {{- end }}