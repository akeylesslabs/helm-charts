{{- if .Values.sra.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-{{ include "akeyless-gateway.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
  {{- include "akeyless-sra-web.labels" . | nindent 4 }}
  {{- if .Values.sra.webConfig.deployment.labels }}
    {{- toYaml .Values.sra.webConfig.deployment.labels | nindent 4 }}
  {{- end }}
  {{- if .Values.sra.webConfig.deployment.annotations }}
  annotations:
  {{- toYaml .Values.sra.webConfig.deployment.annotations | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.sra.webConfig.hpa.enabled }}
  replicas: {{ default 1 .Values.sra.webConfig.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "akeyless-sra-web.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- if .Values.sra.webConfig.deployment.annotations }}
      annotations:
          {{- toYaml .Values.sra.webConfig.deployment.annotations | nindent 8 }}
      {{- end }}
      labels:
        {{- include "akeyless-sra-web.selectorLabels" . | nindent 8 }}
        {{- if .Values.sra.webConfig.deployment.labels }}
          {{- toYaml .Values.sra.webConfig.deployment.labels | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.sra.webConfig.securityContext }}
      {{- if .Values.sra.webConfig.securityContext.enabled }}
      securityContext:
        runAsUser: {{ .Values.sra.webConfig.securityContext.runAsUser }}
        fsGroup: {{ .Values.sra.webConfig.securityContext.fsGroup }}
      {{- end }}
      {{- end }}
      serviceAccountName: {{ include "akeyless-gateway.getServiceAccountName" . }}
      {{- if .Values.sra.sshConfig.nodeSelector }}
      nodeSelector:
      {{ toYaml .Values.sra.sshConfig.nodeSelector | indent 4 }}
      {{- end }}
      volumes:
        {{- range .Values.sra.webConfig.persistence.volumes }}
        - name: {{ .name | title | lower }}
          persistentVolumeClaim:
            claimName: {{ printf "%s-%s" $.Release.Name .name | title | lower }}
        {{- end }}
        {{- if .Values.globalConfig.TLSConf.tlsExistingSecret }}
        - name: gw-signed-ca
          secret:
            secretName: {{ .Values.globalConfig.TLSConf.tlsExistingSecret }}
            items:
              - key: tlsCertificate
                path: gw-cert.pem
        {{- end }}
        {{- if (eq "true" (include "akeyless-gateway.clusterCache.enableTls" . )) }}
        {{ include "akeyless-gateway.clusterCache.tlsVolume" . | nindent 8}}
        {{- end }}
      {{- include "akeyless-sra.imagePullSecrets" . | indent 2 }}
      containers:
        - name: gateway-sra-web
          image: "{{ .Values.sra.image.repository | default "akeyless/zero-trust-bastion" }}:{{ .Values.sra.image.tag | default .Chart.Annotations.sraVersion }}"
          imagePullPolicy: {{ .Values.sra.image.pullPolicy }}
          ports:
            - containerPort: 8888
              name: web
          env:
            {{ include "akeyless-gateway.akeylessGatewayAuthConfig" . | nindent 10 }}
            {{ include "akeyless-gateway.unifiedGatewaySraWebConfig" . | nindent 10 }}
            {{ include "akeyless-gateway.ClusterName" . | nindent 10 }}
            {{- if eq "true" (include "akeyless-gateway.clusterCache.enabled" . ) }}
            {{- include "akeyless-gateway.clusterCacheConfig" . | nindent 10 }}
            {{- end }}
            {{- if .Values.globalConfig.authorizedAccessIDs }}
            - name: GATEWAY_AUTHORIZED_ACCESS_ID
              value: {{ .Values.globalConfig.authorizedAccessIDs | quote }}
            {{- end }}
            {{- if .Values.globalConfig.TLSConf.tlsExistingSecret }}
            - name: AKEYLESS_GW_CERTIFICATE
              valueFrom:
                secretKeyRef:
                  name: {{.Values.globalConfig.TLSConf.tlsExistingSecret | quote  }}
                  key: tlsCertificate
            {{- end }}
            - name: REMOTE_ACCESS_TYPE
              value: "web"
            {{- if .Values.globalConfig.gatewayAuth.azureObjectID }}
            - name: AZURE_OBJECT_ID
              value: {{ .Values.globalConfig.gatewayAuth.azureObjectID }}
            {{- end }}
            {{- if .Values.globalConfig.gatewayAuth.gcpAudience }}
            - name: GCP_AUDIENCE
              value: {{ .Values.globalConfig.gatewayAuth.gcpAudience }}
            {{- end }}
            {{-  include "httpProxySettings" . | nindent 10 }}
            {{ include "akeyless-gateway.chartMetadata" . | nindent 10 }}
            {{- if .Values.debug }}
            - name: DEBUG
              value: {{ .Values.debug | quote }}
            {{- end }}
            {{- if .Values.globalConfig.env }}
            {{- toYaml .Values.globalConfig.env | nindent 12 }}
            {{- end }}
            {{- if .Values.sra.env }}
            {{- toYaml .Values.sra.env | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .Values.sra.webConfig.resources | nindent 12 }}
          livenessProbe:
            tcpSocket:
              port: 8888
            {{- toYaml .Values.sra.webConfig.livenessProbe | trim | nindent 12 }}
          readinessProbe:
            tcpSocket:
              port: 8888
            {{- toYaml .Values.sra.webConfig.readinessProbe | trim | nindent 12 }}
          volumeMounts:
            {{- range .Values.sra.webConfig.persistence.volumes }}
            - name: {{ .name | title | lower }}
              mountPath: /home/akeyless/recordings
              subPath: recordings
            {{- end }}
            {{- if .Values.globalConfig.TLSConf.tlsExistingSecret }}
            - name: gw-signed-ca
              mountPath: "/etc/ssl/certs/gw-cert.pem"
              subPath: gw-cert.pem
            {{- end }}
            {{- if (eq "true" (include "akeyless-gateway.clusterCache.enableTls" . )) }}
            {{ include "akeyless-gateway.clusterCache.tlsVolumeMounts" . | nindent 12 }}
            {{- end }}
{{- end }}
