# Default values for cache-ha
global:
  imageRegistry: ""
  imagePullSecrets: []
  defaultStorageClass: ""

# Port configuration
ports:
  cache: 6379
  sentinel: 26379

# Image configuration
image:
  registry: docker.io
  repository: redis
  tag: 8.2.1-alpine3.22
  pullPolicy: IfNotPresent

# Node configuration
node:
  replicaCount: 3
  
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
  
  persistence:
    enabled: true
    size: 8Gi
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    annotations: {}
  
  podLabels: {}
  podAnnotations: {}
  secretChecksumAnnotations: true
  configChecksumAnnotations: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsGroup: 1001
    runAsNonRoot: true
    readOnlyRootFilesystem: false
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
  
  # Probes
  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
    customLivenessProbe: {}
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 3
    successThreshold: 1
    failureThreshold: 5
    customReadinessProbe: {}
  startupProbe:
    enabled: false
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 15
    customStartupProbe: {}
  
  # StatefulSet configuration
  revisionHistoryLimit: 10
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  persistentVolumeClaimRetentionPolicy:
    enabled: true
    whenDeleted: Delete
    whenScaled: Delete
  
  affinity: {}
  # affinity:
  #   # Pod anti-affinity example - spread cache pods across different nodes
  #   podAntiAffinity:
  #     preferredDuringSchedulingIgnoredDuringExecution:
  #     - weight: 100
  #       podAffinityTerm:
  #         labelSelector:
  #           matchExpressions:
  #           - key: app.kubernetes.io/component
  #             operator: In
  #             values:
  #             - cache
  #         topologyKey: kubernetes.io/hostname
  #   # Pod affinity example - ensure cache pods are co-located with sentinel pods
  #   podAffinity:
  #     preferredDuringSchedulingIgnoredDuringExecution:
  #     - weight: 50
  #       podAffinityTerm:
  #         labelSelector:
  #           matchExpressions:
  #           - key: app.kubernetes.io/component
  #             operator: In
  #             values:
  #             - sentinel
  #         topologyKey: kubernetes.io/hostname
  nodeSelector: {}
  tolerations: []
  topologySpreadConstraints: []
  # topologySpreadConstraints:
  # - maxSkew: 1
  #   topologyKey: kubernetes.io/hostname
  #   whenUnsatisfiable: DoNotSchedule
  #   labelSelector:
  #     matchExpressions:
  #     - key: app.kubernetes.io/component
  #       operator: In
  #       values:
  #       - cache
  priorityClassName: ""
  schedulerName: ""
  terminationGracePeriodSeconds: 30
  dnsPolicy: ""
  dnsConfig: {}
  hostAliases: []
  shareProcessNamespace: false
  automountServiceAccountToken: true
  enableServiceLinks: true
  
  extraFlags: []
  extraEnvVars: []
  extraEnvVarsCM: ""
  extraEnvVarsSecret: ""
  extraVolumes: []
  extraVolumeMounts: []
  sidecars: []
  initContainers: []
  lifecycleHooks: {}
  pdb:
    enabled: false
    minAvailable: ""
    maxUnavailable: 1

networkPolicy:
  enabled: false
  ingressRules: []
  egressRules: []

# Sentinel configuration
sentinel:
  replicaCount: 3
  masterSet: "mymaster"
  # Quorum override (optional) - must be between 1 and sentinel count
  # If not set, will use automatic calculation: (sentinel_count / 2) + 1
  # 
  # WARNING: Setting quorum below ceil(sentinel_count / 2) increases split-brain risk
  # Examples:
  #   - 3 sentinels: recommended quorum = 2, minimum safe = 2
  #   - 5 sentinels: recommended quorum = 3, minimum safe = 3
  #   - 7 sentinels: recommended quorum = 4, minimum safe = 4
  quorum: null
  downAfterMilliseconds: 15000
  failoverTimeout: 30000
  parallelSyncs: 2
  
  podLabels: {}
  podAnnotations: {}
  secretChecksumAnnotations: true
  configChecksumAnnotations: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsGroup: 1001
    runAsNonRoot: true
    readOnlyRootFilesystem: false
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
  
  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
    customLivenessProbe: {}
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 3
    successThreshold: 1
    failureThreshold: 5
    customReadinessProbe: {}
  
  revisionHistoryLimit: 10
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  persistentVolumeClaimRetentionPolicy:
    enabled: false
    whenDeleted: Delete
    whenScaled: Delete
  
  affinity: {}
  # affinity:
  #   # Pod anti-affinity example - spread sentinel pods across different nodes
  #   podAntiAffinity:
  #     preferredDuringSchedulingIgnoredDuringExecution:
  #     - weight: 100
  #       podAffinityTerm:
  #         labelSelector:
  #           matchExpressions:
  #           - key: app.kubernetes.io/component
  #             operator: In
  #             values:
  #             - sentinel
  #         topologyKey: kubernetes.io/hostname
  #   # Pod affinity example - ensure sentinel pods are co-located with cache pods
  #   podAffinity:
  #    preferredDuringSchedulingIgnoredDuringExecution:
  #    - weight: 50
  #      podAffinityTerm:
  #        labelSelector:
  #          matchExpressions:
  #          - key: app.kubernetes.io/component
  #            operator: In
  #            values:
  #            - cache
  #        topologyKey: kubernetes.io/hostname
  nodeSelector: {}
  tolerations: []
  topologySpreadConstraints: []
  # topologySpreadConstraints:
  # - maxSkew: 1
  #   topologyKey: kubernetes.io/hostname
  #   whenUnsatisfiable: DoNotSchedule
  #   labelSelector:
  #     matchExpressions:
  #     - key: app.kubernetes.io/component
  #       operator: In
  #       values:
  #       - sentinel
  priorityClassName: ""
  schedulerName: ""
  terminationGracePeriodSeconds: 30
  dnsPolicy: ""
  dnsConfig: {}
  hostAliases: []
  shareProcessNamespace: false
  automountServiceAccountToken: true
  enableServiceLinks: true
  
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  
  extraFlags: []
  extraEnvVars: []
  extraEnvVarsCM: ""
  extraEnvVarsSecret: ""
  extraVolumes: []
  extraVolumeMounts: []
  sidecars: []
  initContainers: []
  lifecycleHooks: {}
  
  pdb:
    enabled: false
    minAvailable: ""
    maxUnavailable: 1

auth:
  enabled: false
  password: ""

tls:
  enabled: false
  authClients: false
  existingSecret: ""
  # certValidityDays: 1825

paths:
  configDir: /etc/cache
  configFile: cache.conf
  sentinelConfigFile: sentinel.conf
  tlsDir: /etc/cache/tls
  tlsCertFile: tls.crt
  tlsKeyFile: tls.key
  tlsCaCertFile: ca.crt

service:
  type: ClusterIP
  annotations: {}
  loadBalancerIP: ""
  loadBalancerSourceRanges: []
  clusterIP: ""
  sessionAffinity: ""
  sessionAffinityConfig: {}

headless:
  service:
    clusterIP: None
    annotations: {}

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

secretAnnotations: {}
commonLabels: {}
commonAnnotations:
  aaa: bb

componentNames:
  cache: "cache"
  sentinel: "sentinel"

namespaceOverride: ""
nameOverride: ""
fullnameOverride: ""

# Log level configuration (suppress SSL errors when set to warning)
logLevel: "warning"  # notice, warning, verbose, debug