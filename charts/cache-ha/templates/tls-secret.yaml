{{- if and .Values.tls.enabled (not .Values.tls.existingSecret) }}
{{- $tlsCrt := "" }}
{{- $tlsKey := "" }}
{{- $caCrt := "" }}
{{- $existingSecret := lookup "v1" "Secret" (include "cache-ha.namespace" .) (include "cache-ha.tlsSecretName" .) }}
{{- if $existingSecret }}
{{- $tlsCrt = get $existingSecret.data "tls.crt" }}
{{- $tlsKey = get $existingSecret.data "tls.key" }}
{{- $caCrt = get $existingSecret.data "ca.crt" }}
{{- else }}
{{- $ca := genCA "cache-ca" ((.Values.tls.certValidityDays | int) | default 1825) }}
{{- $releaseNamespace := (include "cache-ha.namespace" .) }}
{{- $clusterDomain := .Values.clusterDomain | default "cluster.local" }}
{{- $fullname := include "cache-ha.fullname" . }}
{{- $serviceName := include "cache-ha.fullname" . }}
{{- $headlessServiceName := printf "%s-headless" (include "cache-ha.fullname" .) }}
{{- $cacheHeadlessServiceName := printf "%s-cache-headless" (include "cache-ha.fullname" .) }}
{{- $sentinelHeadlessServiceName := printf "%s-sentinel-headless" (include "cache-ha.fullname" .) }}
{{- $altNames := list 
  (printf "*.%s.%s.svc.%s" $serviceName $releaseNamespace $clusterDomain) 
  (printf "%s.%s.svc.%s" $serviceName $releaseNamespace $clusterDomain) 
  (printf "*.%s.%s.svc.%s" $headlessServiceName $releaseNamespace $clusterDomain) 
  (printf "%s.%s.svc.%s" $headlessServiceName $releaseNamespace $clusterDomain) 
  (printf "*.%s.%s.svc.%s" $cacheHeadlessServiceName $releaseNamespace $clusterDomain) 
  (printf "%s.%s.svc.%s" $cacheHeadlessServiceName $releaseNamespace $clusterDomain) 
  (printf "*.%s.%s.svc.%s" $sentinelHeadlessServiceName $releaseNamespace $clusterDomain) 
  (printf "%s.%s.svc.%s" $sentinelHeadlessServiceName $releaseNamespace $clusterDomain) 
  "127.0.0.1" 
  "localhost" 
  $fullname 
}}
{{- $cert := genSignedCert $fullname nil $altNames ((.Values.tls.certValidityDays | int) | default 1825) $ca }}
{{- $tlsCrt = $cert.Cert | b64enc }}
{{- $tlsKey = $cert.Key | b64enc }}
{{- $caCrt = $ca.Cert | b64enc }}
{{- end }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "cache-ha.tlsSecretName" . }}
  namespace: {{ include "cache-ha.namespace" . }}
  labels: {{- include "cache-ha.labels" . | nindent 4 }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- toYaml .Values.commonAnnotations | nindent 4 }}
  {{- end }}
type: kubernetes.io/tls
data:
  tls.crt: {{ $tlsCrt }}
  tls.key: {{ $tlsKey }}
  ca.crt: {{ $caCrt }}
{{- end }}